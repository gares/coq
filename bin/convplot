#!/usr/bin/lua5.1

local coq = require "coq"

local file1 = assert(select(1,...), "missing arg1: stat file expected")
local file2 = assert(select(2,...), "missing arg2: stat file expected")

local data1 = coq.parse(file1)
local data2 = coq.parse(file2)

local ext1 = file1:match('%.([^%.]+)$')
local ext2 = file2:match('%.([^%.]+)$')
local name = file1:match('/([^/%.]+)[^/]*$').."-"..ext2.."-"..ext1.."-conv"

od = io.open("logs/"..name..".data","w")
local tot = 0
local high = {}
local high_density = 10
local last_high = -1 - high_density
for i=1, #data1 do
  local d1 = data1[i]
  local d2 = data2[i]
  if d1 == nil or d2 == nil then break end
  tot = tot + 1
  local r1 = coq.interpret(d1)
  local r2 = coq.interpret(d2)
  if (r1.raw_time > 0.5 or r2.raw_time > 0.5)
  and last_high < tot - high_density then
	  last_high = tot
	  high[#high + 1] = ('"%d" %d'):format(r1.id,tot)
  end

    assert(r1.id == r2.id and r1.file == r2.file, r1.id .." ".. r1.file)
    -- and b1 == b2)
    od:write(string.format("%d %d %f %f %f %4.3f %f %f %4.3f\n",
	tot,
    	r1.id,
	r1.raw_time,r2.raw_time,r2.time,
	r2.red_time,
	math.max(r1.raw_time,r2.raw_time),
	math.min(r1.raw_time,r2.raw_time),
	r1.red_time))
 end
od:close()

oc = io.open("logs/"..name..".plot","w")
oc:write(([[
 set logscale y
 set style data points
 unset xtics
 set x2tics rotate by 90 left font "Sans,7pt" out \
 	(]]..table.concat(high,", ")..[[)
 set grid ytics
 set bars small
 set title "]]..name..[["

 # x y yhigh ylow 6=mx 7=min
 plot  "logs/]]..name..[[.data" \
 		using 1:4:4:8 with yerrorbars pt 0 title "]]..ext2..[[ worse" \
      ,"logs/]]..name..[[.data" \
      		using 1:4:7:4 with yerrorbars pt 0 title "]]..ext2..[[ better" 

 set terminal png size ]]..tot..[[, 700
 set output "logs/]]..name..[[.png"
 replot

 set terminal svg size ]]..tot..[[, 700 background "white"
 set output "logs/]]..name..[[.svg"
 replot
]]))
oc:close()

os.execute("gnuplot logs/"..name..".plot")
